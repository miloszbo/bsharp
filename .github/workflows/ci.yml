name: CI

on:
  push:
    branches: [ main ]
    tags:
      - 'bsharp_parser-*'
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      publish:
        description: "Publish bsharp_parser to crates.io"
        required: false
        default: "false"
        type: choice
        options: ["false", "true"]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Init submodules (shallow)
        run: git submodule update --init --recursive --depth 1 --filter=blob:none

      - name: Configure sparse-checkout for roslyn submodule (C# Syntax tests only)
        run: |
          if [ -e roslyn_testing/roslyn_repo/.git ]; then
            git -C roslyn_testing/roslyn_repo sparse-checkout init --cone
            git -C roslyn_testing/roslyn_repo sparse-checkout set src/Compilers/CSharp/Test/Syntax
          fi

      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Format check
        run: cargo fmt --all -- --check

      - name: Clippy
        run: |
          cargo clippy --workspace --all-targets --all-features \
            --exclude bsharp_nom_supreme \
            --exclude bsharp_compliance \
            --exclude bsharp_compliance_testing \
            -- -D warnings

      - name: Tests
        run: cargo test --all --all-features

  publish_bsharp_parser:
    name: Publish bsharp_parser to crates.io
    runs-on: ubuntu-latest
    needs: build
    if: |
      github.event_name == 'workflow_dispatch' && inputs.publish == 'true' ||
      startsWith(github.ref, 'refs/tags/bsharp_parser-')
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Rust (stable)
        uses: dtolnay/rust-toolchain@stable
      - name: Cache cargo
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Publish bsharp_parser
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}
        run: |
          # Ensure we are on the tag's commit for reproducibility
          echo "Ref: $GITHUB_REF"
          cargo publish -p bsharp_parser --allow-dirty
