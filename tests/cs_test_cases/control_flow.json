{
  "using_directives": [
    {
      "Namespace": {
        "namespace": {
          "name": "System"
        }
      }
    }
  ],
  "declarations": [
    {
      "Namespace": {
        "name": {
          "name": "TestApp"
        },
        "using_directives": [],
        "declarations": [
          {
            "Class": {
              "attributes": [],
              "modifiers": [
                "Public"
              ],
              "name": {
                "name": "ControlFlowExamples"
              },
              "type_parameters": null,
              "base_types": [],
              "body_declarations": [
                {
                  "Method": {
                    "modifiers": [
                      "Public"
                    ],
                    "return_type": {
                      "Primitive": "Void"
                    },
                    "name": {
                      "name": "IfStatements"
                    },
                    "type_parameters": null,
                    "parameters": [
                      {
                        "modifier": null,
                        "parameter_type": {
                          "Primitive": "Int"
                        },
                        "name": {
                          "name": "value"
                        }
                      }
                    ],
                    "body": {
                      "Block": [
                        {
                          "If": {
                            "condition": {
                              "Binary": {
                                "left": {
                                  "Variable": {
                                    "name": "value"
                                  }
                                },
                                "op": "GreaterThan",
                                "right": {
                                  "Literal": {
                                    "Integer": 10
                                  }
                                }
                              }
                            },
                            "consequence": {
                              "Block": [
                                {
                                  "Expression": {
                                    "Invocation": {
                                      "callee": {
                                        "MemberAccess": {
                                          "object": {
                                            "Variable": {
                                              "name": "Console"
                                            }
                                          },
                                          "member": {
                                            "name": "WriteLine"
                                          }
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "Literal": {
                                            "String": "Value is greater than 10"
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            },
                            "alternative": {
                              "If": {
                                "condition": {
                                  "Binary": {
                                    "left": {
                                      "Variable": {
                                        "name": "value"
                                      }
                                    },
                                    "op": "GreaterThan",
                                    "right": {
                                      "Literal": {
                                        "Integer": 5
                                      }
                                    }
                                  }
                                },
                                "consequence": {
                                  "Block": [
                                    {
                                      "Expression": {
                                        "Invocation": {
                                          "callee": {
                                            "MemberAccess": {
                                              "object": {
                                                "Variable": {
                                                  "name": "Console"
                                                }
                                              },
                                              "member": {
                                                "name": "WriteLine"
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "Literal": {
                                                "String": "Value is between 6 and 10"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                },
                                "alternative": {
                                  "Block": [
                                    {
                                      "Expression": {
                                        "Invocation": {
                                          "callee": {
                                            "MemberAccess": {
                                              "object": {
                                                "Variable": {
                                                  "name": "Console"
                                                }
                                              },
                                              "member": {
                                                "name": "WriteLine"
                                              }
                                            }
                                          },
                                          "arguments": [
                                            {
                                              "Literal": {
                                                "String": "Value is 5 or less"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ]
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "constraints": null
                  }
                },
                {
                  "Method": {
                    "modifiers": [
                      "Public"
                    ],
                    "return_type": {
                      "Primitive": "Void"
                    },
                    "name": {
                      "name": "SwitchStatement"
                    },
                    "type_parameters": null,
                    "parameters": [
                      {
                        "modifier": null,
                        "parameter_type": {
                          "Primitive": "String"
                        },
                        "name": {
                          "name": "fruit"
                        }
                      }
                    ],
                    "body": {
                      "Block": [
                        {
                          "Switch": {
                            "expression": {
                              "Invocation": {
                                "callee": {
                                  "MemberAccess": {
                                    "object": {
                                      "Variable": {
                                        "name": "fruit"
                                      }
                                    },
                                    "member": {
                                      "name": "ToLower"
                                    }
                                  }
                                },
                                "arguments": []
                              }
                            },
                            "sections": [
                              {
                                "labels": [
                                  {
                                    "Case": {
                                      "Literal": {
                                        "String": "apple"
                                      }
                                    }
                                  }
                                ],
                                "statements": [
                                  {
                                    "Expression": {
                                      "Invocation": {
                                        "callee": {
                                          "MemberAccess": {
                                            "object": {
                                              "Variable": {
                                                "name": "Console"
                                              }
                                            },
                                            "member": {
                                              "name": "WriteLine"
                                            }
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "Literal": {
                                              "String": "Selected an apple"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "Break": null
                                  }
                                ]
                              },
                              {
                                "labels": [
                                  {
                                    "Case": {
                                      "Literal": {
                                        "String": "banana"
                                      }
                                    }
                                  }
                                ],
                                "statements": [
                                  {
                                    "Expression": {
                                      "Invocation": {
                                        "callee": {
                                          "MemberAccess": {
                                            "object": {
                                              "Variable": {
                                                "name": "Console"
                                              }
                                            },
                                            "member": {
                                              "name": "WriteLine"
                                            }
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "Literal": {
                                              "String": "Selected a banana"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "Break": null
                                  }
                                ]
                              },
                              {
                                "labels": [
                                  {
                                    "Case": {
                                      "Literal": {
                                        "String": "orange"
                                      }
                                    }
                                  }
                                ],
                                "statements": [
                                  {
                                    "Expression": {
                                      "Invocation": {
                                        "callee": {
                                          "MemberAccess": {
                                            "object": {
                                              "Variable": {
                                                "name": "Console"
                                              }
                                            },
                                            "member": {
                                              "name": "WriteLine"
                                            }
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "Literal": {
                                              "String": "Selected an orange"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "Break": null
                                  }
                                ]
                              },
                              {
                                "labels": [
                                  "Default"
                                ],
                                "statements": [
                                  {
                                    "Expression": {
                                      "Invocation": {
                                        "callee": {
                                          "MemberAccess": {
                                            "object": {
                                              "Variable": {
                                                "name": "Console"
                                              }
                                            },
                                            "member": {
                                              "name": "WriteLine"
                                            }
                                          }
                                        },
                                        "arguments": [
                                          {
                                            "Literal": {
                                              "String": "Unknown fruit"
                                            }
                                          }
                                        ]
                                      }
                                    }
                                  },
                                  {
                                    "Break": null
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ]
                    },
                    "constraints": null
                  }
                },
                {
                  "Method": {
                    "modifiers": [
                      "Public"
                    ],
                    "return_type": {
                      "Primitive": "Void"
                    },
                    "name": {
                      "name": "Loops"
                    },
                    "type_parameters": null,
                    "parameters": [],
                    "body": {
                      "Block": [
                        {
                          "For": {
                            "initializer": {
                              "Declaration": {
                                "is_const": false,
                                "is_ref": false,
                                "declaration_type": {
                                  "Primitive": "Int"
                                },
                                "declarators": [
                                  {
                                    "name": {
                                      "name": "i"
                                    },
                                    "initializer": {
                                      "Literal": {
                                        "Integer": 0
                                      }
                                    }
                                  }
                                ]
                              }
                            },
                            "condition": {
                              "Binary": {
                                "left": {
                                  "Variable": {
                                    "name": "i"
                                  }
                                },
                                "op": "LessThan",
                                "right": {
                                  "Literal": {
                                    "Integer": 5
                                  }
                                }
                              }
                            },
                            "iterator": [
                              {
                                "PostfixUnary": {
                                  "op": "Increment",
                                  "expr": {
                                    "Variable": {
                                      "name": "i"
                                    }
                                  }
                                }
                              }
                            ],
                            "body": {
                              "Block": [
                                {
                                  "Expression": {
                                    "Invocation": {
                                      "callee": {
                                        "MemberAccess": {
                                          "object": {
                                            "Variable": {
                                              "name": "Console"
                                            }
                                          },
                                          "member": {
                                            "name": "WriteLine"
                                          }
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "Binary": {
                                            "left": {
                                              "Literal": {
                                                "String": "For loop: "
                                              }
                                            },
                                            "op": "Add",
                                            "right": {
                                              "Variable": {
                                                "name": "i"
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "Declaration": {
                            "is_const": false,
                            "is_ref": false,
                            "declaration_type": {
                              "Primitive": "Int"
                            },
                            "declarators": [
                              {
                                "name": {
                                  "name": "counter"
                                },
                                "initializer": {
                                  "Literal": {
                                    "Integer": 0
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "While": {
                            "condition": {
                              "Binary": {
                                "left": {
                                  "Variable": {
                                    "name": "counter"
                                  }
                                },
                                "op": "LessThan",
                                "right": {
                                  "Literal": {
                                    "Integer": 3
                                  }
                                }
                              }
                            },
                            "body": {
                              "Block": [
                                {
                                  "Expression": {
                                    "Invocation": {
                                      "callee": {
                                        "MemberAccess": {
                                          "object": {
                                            "Variable": {
                                              "name": "Console"
                                            }
                                          },
                                          "member": {
                                            "name": "WriteLine"
                                          }
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "Binary": {
                                            "left": {
                                              "Literal": {
                                                "String": "While loop: "
                                              }
                                            },
                                            "op": "Add",
                                            "right": {
                                              "Variable": {
                                                "name": "counter"
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "Expression": {
                                    "PostfixUnary": {
                                      "op": "Increment",
                                      "expr": {
                                        "Variable": {
                                          "name": "counter"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "Declaration": {
                            "is_const": false,
                            "is_ref": false,
                            "declaration_type": {
                              "Primitive": "Int"
                            },
                            "declarators": [
                              {
                                "name": {
                                  "name": "doCounter"
                                },
                                "initializer": {
                                  "Literal": {
                                    "Integer": 0
                                  }
                                }
                              }
                            ]
                          }
                        },
                        {
                          "DoWhile": {
                            "body": {
                              "Block": [
                                {
                                  "Expression": {
                                    "Invocation": {
                                      "callee": {
                                        "MemberAccess": {
                                          "object": {
                                            "Variable": {
                                              "name": "Console"
                                            }
                                          },
                                          "member": {
                                            "name": "WriteLine"
                                          }
                                        }
                                      },
                                      "arguments": [
                                        {
                                          "Binary": {
                                            "left": {
                                              "Literal": {
                                                "String": "Do-while loop: "
                                              }
                                            },
                                            "op": "Add",
                                            "right": {
                                              "Variable": {
                                                "name": "doCounter"
                                              }
                                            }
                                          }
                                        }
                                      ]
                                    }
                                  }
                                },
                                {
                                  "Expression": {
                                    "PostfixUnary": {
                                      "op": "Increment",
                                      "expr": {
                                        "Variable": {
                                          "name": "doCounter"
                                        }
                                      }
                                    }
                                  }
                                }
                              ]
                            },
                            "condition": {
                              "Binary": {
                                "left": {
                                  "Variable": {
                                    "name": "doCounter"
                                  }
                                },
                                "op": "LessThan",
                                "right": {
                                  "Literal": {
                                    "Integer": 3
                                  }
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "constraints": null
                  }
                }
              ],
              "documentation": null
            }
          }
        ]
      }
    }
  ],
  "file_scoped_namespace": null,
  "top_level_statements": []
}